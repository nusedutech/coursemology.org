<%= form_for [@course, @lesson_plan_entry], :html => { :class => 'form-horizontal lesson-plan-entry-form' } do |f| %>
    <div class="control-group">
      <%= f.label "Type", :class => 'control-label' %>
      <div class="controls">
        <%= f.select :entry_type, LessonPlanEntry::ENTRY_TYPES, :class => 'span7' %>
      </div>
    </div>

    <div class="control-group">
      <%= f.label :title, :class => 'control-label' %>
      <div class="controls">
        <%= f.text_field :title, :class => 'text_field span7', :placeholder => "What's this session about?", :required => 'required' %>
      </div>
    </div>

    <div class="control-group">
      <%= f.label :location, :class => 'control-label' %>
      <div class="controls">
        <%= f.text_field :location, :class => 'text_field span7', :list => "link_list", :placeholder => "(Optional) Where's this session held or What's the Link for Video?" %>
        <datalist id="link_list">
        </datalist>
      </div>
    </div>

    <div class="control-group">
      <label class="control-label">
          Description&#47;Objectives
      </label>
      <div class="controls">
        <%= f.text_area :description, :class => 'text_field span7 html-editor', :placeholder => "(Optional) What's going to happen? What will students know after attending?" %>
      </div>
    </div>

    <div class="control-group">
      <label class="control-label">
        Tags
      </label>
      <div class="controls">
        <% if !@tags_list.nil? %>
            <div style="padding-top: 5px; width: 65%">
              <textarea style="height: 28px" id="txtar_tagging" rows="1"></textarea>
            </div>

            <input type="hidden" class="hdf-all-tags" name="all_tags" value="<%=@tags_list[:all]%>">
            <input type="hidden" class="hdf-original-tags" name="original_tags" value="<%=@tags_list[:origin]%>">
            <input type="hidden" class="hdf-new-tags" name="new_tags">
        <% end %>
      </div>
    </div>

    <div class="control-group">
      <%= f.label :start_at, :class => 'control-label' %>
      <div class="controls">
        <div class="datetimepicker input-append" id="lesson_plan_entry_start_at_picker"
          <%= @start_at ? " data-date-startdate=\"#{datetime_iso(@start_at)}\"".html_safe : '' %>
          <%= @end_at ? " data-date-enddate=\"#{datetime_iso(@end_at)}\"".html_safe : '' %>>
          <%= f.text_field :start_at, :value => datetime_format(@lesson_plan_entry.start_at || @start_at ), :required => 'required' %>
          <span class="add-on">
            <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
          </span>
        </div>
      </div>
    </div>

    <div class="control-group">
      <%= f.label :end_at, :class => 'control-label' %>
      <div class="controls">
        <div class="datetimepicker input-append" id="lesson_plan_entry_end_at_picker"
          <%= @start_at ? " data-date-startdate=\"#{datetime_iso(@start_at)}\"".html_safe : '' %>
          <%= @end_at ? " data-date-enddate=\"#{datetime_iso(@end_at)}\"".html_safe : '' %>>
          <%= f.text_field :end_at, :value => datetime_format(@lesson_plan_entry.end_at || @end_at), :required => 'required' %>
          <span class="add-on">
            <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
          </span>
        </div>
      </div>
    </div>

    <div class="control-group" id="linked_resources">
      <%= f.label :resources, :class => 'control-label' %>
      <div class="controls">
        <span class="btn btn-primary addresource-button">Add Resources</span>
        <table class="table table-striped">
          <thead>
            <tr>
              <th id="linked_resource_name">Resource</th>
              <th id="linked_resource_type">Type</th>
              <th id="linked_resource_actions"></th>
            </tr>
          </thead>
          <tbody>
            <% @lesson_plan_entry.resources.each { |r| %>
            <tr>
              <td><%= r.obj.title %></td>
              <td>&nbsp;</td>
              <td>
                <span class="btn btn-danger resource-delete"><i class="icon-trash"></i></span>
                <input type="hidden" name="resources[]" value="<%= r.obj_id %>,<%= r.obj_type %>" />
              </td>
            </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
    
    <div class="form-actions">
      <%= f.submit "Submit", :id => 'btn_submit', :class => 'btn btn-primary', data: {disable_with: "Submitting..."} %>
      <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                  course_lesson_plan_path(@course), :class => 'btn' %>
    </div>
<% end %>

<script type="text/x-tmpl" id="lesson-plan-resource">
<tr>
  <td>{%= o[2] %}</td>
  <td>&nbsp;</td>
  <td>
    <span class="btn btn-danger resource-delete"><i class="icon-trash"></i></span>
    <input type="hidden" name="resources[]" value="{%= o[0] %},{%= o[1] %}" />
  </td>
</tr>
</script>

<% if @ivle_token %>
    <input type="hidden" id="ivle_token" value="<%= @ivle_token %>" />
    <input type="hidden" id="ivle_api" value="<%= @ivle_api %>" />
    <input type="hidden" id="mapping_module" value="<%= @mapping_module %>" />
<% end%>
<script>

    $( document ).ready(function() {
        $('.row.main-content').prepend('<div style="position: relative; margin-left: 30px;"><a class="btn btn-navbar collapsed"><span class="icon-chevron-down"></span></a></div>');
        $(".btn.btn-navbar.collapsed").click(function(){

        });

        $('#lesson_plan_entry_entry_type').change(function(){
            if($(this).val()==="3"){
                get_data_ivle();
            }
        });

        if($('#lesson_plan_entry_entry_type').val()==="3"){
            get_data_ivle();
        }
    });

    function get_data_ivle(){
        if($("#ivle_token").length && $("#mapping_module").length) {
            var key = $("#ivle_api").val(), token = $("#ivle_token").val(), user = ivle.User(key, token);
            user.init().done(function () {});
            var id = $("#mapping_module").val();
            user.get("Multimedia", {CourseID: id, TitleOnly: false})
                    .success(function (data) {
                        $.each(data.Results, function (ind, val) {
                            $.each(val.Files, function (inf, fi) {
                                if(fi.MP4 != null) {
                                    $('#link_list').append('<option value="' + fi.MP4 + '">' + val.Title + ' - ' + fi.FileTitle + '</option>');
                                }else if(fi.MP4 == null && fi.FileName.indexOf("http://") >= 0 && fi.FileName.indexOf(".mp4") >= 0){
                                    $('#link_list').append('<option value="' + fi.FileName + '">' + val.Title + ' - ' + fi.FileTitle + '</option>');
                                }else if(fi.MP4 == null && fi.FileName.indexOf("http://") < 0 && fi.BankCatID != null){
                                    $('#link_list').append('<option value="http://ivle.nus.edu.sg/media/media_download.aspx?ChannelID=' + val.ID + '&MediaItemID=' + fi.ID + '&bankCatID='+ fi.BankCatID +'&fileName=' + fi.FileName + '">' + val.Title + ' - ' + fi.FileTitle + '</option>');
                                }
                            });
                        });
                    });
            user.get("Webcasts", {CourseID: id, TitleOnly: false})
                    .success(function (data) {
                        $.each(data.Results, function (ind, val) {
                            $.each(val.ItemGroups, function (ind_it, ig) {
                                $.each(ig.Files, function (inf, fi) {
                                    $('#link_list').append('<option value="' + (fi.MP4.length ? fi.MP4 : fi.FileName) + '">' + val.Title + ' - ' + fi.FileTitle + '</option>');
                                });
                            });
                        });
                    });
        }
    }

    $(document).ready(function(){
        var all_tags = JSON.parse($(".hdf-all-tags").val());
        var origin_tags = JSON.parse($(".hdf-original-tags").val());

        $("#txtar_tagging").textext({
            plugins : 'suggestions tags prompt autocomplete arrow filter',
            prompt : 'Add tags using concepts...',
            suggestions: all_tags,
            ext: {
                itemManager: {
                    filter: function(list,query)
                    {	//over-drive filter with substring
                        var result = [];
                        $.each(list, function(){
                            if (this.toString().toLowerCase().indexOf(query.toLowerCase()) != -1){
                                result.push(this.toString());
                            }
                        });
                        //console.log(result);
                        return result;
                    }
                }
            }
        }).bind('isTagAllowed', function(e, data){
            //reset suggestion after choosing a tag
            textext = $(e.target).textext()[0];
            $(this).trigger(
                    'setSuggestions',
                    { result : textext.itemManager().filter(all_tags, "") }
            );
        });
        $("#txtar_tagging").textext()[0].tags().addTags(origin_tags);

        $('#lesson_plan_entry_title').click();
        $('#btn_submit').on("click",function() {
            $(".hdf-new-tags").val(JSON.stringify(JSON.parse($("#txtar_tagging").textext()[0].hiddenInput().val())));
            return true;
        });
    });
</script>