<div class="topicconcept-spunned">
	<div class="topicconcept-spun-2">
		<div class="topicconcept-spun-grid-normaliser">
		  	<div class="accordion accordion-student-transcript-panel" id="accordion-student-panel-rating">
				<div class="accordion-group student-transcript-panel">
			  		<div class="accordion-heading">
			    		<div class="accordion-wordheading" style="text-align: center;">
			      			<h4>
			      				Rating&nbsp;&nbsp;
			      				<a href="#" class="tooltip-units" data-placement="right" data-toggle="tooltip" data-original-title="Total rating calculated from correctly answered questions">
			      					<i class="icon-info-sign icon-hover-effect"></i>
			      				</a>
			      			</h4>
			    		</div>
			  		</div>
			  		<div id="collapse-student-panel-rating" class="accordion-body collapse in accordion-body-row-one accordion-student-transcript-panel-impt">
			    		<div class="accordion-inner" style="text-align: center;">
			    			<h1><%= @achieve_rating %></h1>
			    		</div>
			  		</div>
				</div>
			</div>
		</div>
	</div>

	<div class="topicconcept-spun-2">
		<div class="topicconcept-spun-grid-normaliser">
		  	<div class="accordion accordion-student-transcript-panel" id="accordion-student-panel-rating">
				<div class="accordion-group student-transcript-panel">
			  		<div class="accordion-heading">
			    		<div class="accordion-wordheading" style="text-align: center;">
			      			<h4>
			      				Raw stats&nbsp;&nbsp;
			      				<a href="#" class="tooltip-units" data-placement="right" data-toggle="tooltip" data-original-title="All the right and wrong answered amounts within this submission">
			      					<i class="icon-info-sign icon-hover-effect"></i>
			      				</a>
			      			</h4>
			    		</div>
			  		</div>
			  		<div id="collapse-student-panel-rating" class="accordion-body collapse in accordion-body-row-one accordion-student-transcript-panel-impt">
			    		<div class="accordion-inner" style="text-align: center;">
			    			<div style="position: relative; top: 20px; text-align: center;">
				    			<label style="color: green; font-size: 25px; font-weight: bold; margin-bottom: 10px;">
				    				+&nbsp;<%= @achieve_correct_amount %>
				    			</label>&nbsp;&nbsp;
				    			<label style="color: red; font-size: 25px; font-weight: bold; margin-bottom: 10px;">
				    				-&nbsp;<%= @achieve_wrong_amount %>
				    			</label>
				    		</div>
			    		</div>
			  		</div>
				</div>
			</div>
		</div>
	</div>

	<div class="topicconcept-spun-2">
		<div class="topicconcept-spun-grid-normaliser">
		  	<div class="accordion accordion-student-transcript-panel" id="accordion-student-panel-rating">
				<div class="accordion-group student-transcript-panel">
			  		<div class="accordion-heading">
			    		<div class="accordion-wordheading" style="text-align: center;">
			      			<h4>
			      				Mastery&nbsp;&nbsp;
			      				<a href="#" class="tooltip-units" data-placement="right" data-toggle="tooltip" data-original-title="Percentage of concepts achieved">
			      					<i class="icon-info-sign icon-hover-effect"></i>
			      				</a>
			      			</h4>
			    		</div>
			  		</div>
			  		<div id="collapse-student-panel-rating" class="accordion-body collapse in accordion-body-row-one accordion-student-transcript-panel-impt">
			    		<div class="accordion-inner" style="text-align: center;">
			    			<h1><%= @achieve_percentage %>%</h1>
			    		</div>
			  		</div>
				</div>
			</div>
		</div>
	</div>

	<div class="topicconcept-spun-6">
		<div class="topicconcept-spun-grid-normaliser">
			<div class="accordion accordion-student-transcript-panel" id="accordion-question-log">
				<div class="accordion-group student-transcript-panel">
			  		<div class="accordion-heading">
			    		<div class="accordion-wordheading">
			      			<h4>Review Answered Questions</h4>
			    		</div>
			  		</div>
			  		<div id="collapse-question-log" class="accordion-body collapse in accordion-body-row-one">
			    		<div class="accordion-inner" style="text-align: center;">
			    			<form action="<%= review_diagnostic_exploration_on_stage_course_topicconcepts_path(@course) %>" onsubmit="popupform(this);" method="POST">
			    				<input type="hidden" name="submission_id" value="<%= @chosen_submission.id %>" />
						      	<select name="concept_id" style="margin-right:10px;">
						        	<%= @concept_stages.each do |cs| %>
						            	<option value="<%= cs.concept.id %>"><%= cs.concept.name %></option>
						        	<% end %>
						      	</select>
						      	<input class="btn" type="submit" value="View" />
			        		</form>
			    		</div>
			  		</div>
				</div>
			</div>
		</div>
	</div>

	<div class="topicconcept-spun-12">
		<div class="topicconcept-spun-grid-normaliser">
		  	<div class="accordion accordion-student-transcript-panel" id="accordion-scoreboard">
				<div class="accordion-group student-transcript-panel">
			  		<div class="accordion-heading">
			    		<div class="accordion-wordheading">
			      			<h4>Scoreboard
			      				<a href="#" class="tooltip-units" data-placement="right" data-toggle="tooltip" data-original-title="Rating scoreboard across students">
			      					<i class="icon-info-sign icon-hover-effect"></i>
			      				</a>
			      			</h4>
			    		</div>
			    		<div class="accordion-right">
			      			<a class="accordion-toggle btn accordion-minimise" data-toggle="collapse" data-parent="#accordion-scoreboard" href="#collapse-scoreboard"><i class="icon-minus"></i></a>
			    		</div>
			  		</div>
			  		<div id="collapse-scoreboard" class="accordion-body collapse">
			    		<div class="accordion-inner paddingless">
			    			<table id="scoreboard_table" class="table table-striped">
			    				<tr>
			    					<th style="width:15px;">SN.</th>
			    					<th style="width: 20px; max-width:55px;"></th>
			    					<th></th>
			    					<th style="width:50px;">Rating</th>
			    				</tr>
			    			</table>
			    		</div>
			  		</div>
				</div>
			</div>
		</div>
	</div>

    <div class="topicconcept-spun-6">
		<div class="topicconcept-spun-grid-normaliser">
		  	<div class="accordion accordion-student-transcript-panel" id="accordion-student-transcript-panel-best">
				<div class="accordion-group student-transcript-panel">
			  		<div class="accordion-heading">
			    		<div class="accordion-wordheading">
			      			<h4>Best Concepts</h4>
			    		</div>
			    		<div class="accordion-right">
			      			<a class="accordion-toggle btn accordion-minimise" data-toggle="collapse" data-parent="#accordion-student-transcript-panel-best" href="#collapse-student-transcript-panel-best"><i class="icon-minus"></i></a>
			    		</div>
			  		</div>
			  		<div id="collapse-student-transcript-panel-best" class="accordion-body collapse in">
			    		<div class="accordion-inner">
			    			<div id="student-transcript-panel-best" style="text-align: center;"></div>
			    		</div>
			  		</div>
				</div>
			</div>
		</div>
	</div>

	<div class="topicconcept-spun-6">
		<div class="topicconcept-spun-grid-normaliser">
		  	<div class="accordion accordion-student-transcript-panel" id="accordion-student-transcript-panel-notbest">
				<div class="accordion-group student-transcript-panel">
			  		<div class="accordion-heading">
			    		<div class="accordion-wordheading">
			      			<h4>Topics to work on</h4>
			    		</div>
			    		<div class="accordion-right">
			      			<a class="accordion-toggle btn accordion-minimise" data-toggle="collapse" data-parent="#accordion-student-transcript-panel-notbest" href="#collapse-student-transcript-panel-notbest"><i class="icon-minus"></i></a>
			    		</div>
			  		</div>
			  		<div id="collapse-student-transcript-panel-notbest" class="accordion-body collapse in">
			    		<div class="accordion-inner">
			    			<div id="student-transcript-panel-notbest" style="text-align: center;"></div>
			    		</div>
			  		</div>
				</div>
			</div>
		</div>
	</div>

	<div class="topicconcept-spun-12">
		<div class="topicconcept-spun-grid-normaliser">
			<div class="accordion accordion-student-transcript-panel" id="accordion-mastery-view">
				<div class="accordion-group student-transcript-panel">
			  		<div class="accordion-heading">
			    		<div class="accordion-wordheading">
			      			<h4>Mastery View</h4>
			    		</div>
			    		<div class="accordion-right">
			      			<a class="accordion-toggle btn accordion-minimise" data-toggle="collapse" data-parent="#accordion-mastery-view" href="#collapse-mastery-view"><i class="icon-minus"></i></a>
			    		</div>
			  		</div>
			  		<div id="collapse-mastery-view" class="accordion-body collapse in">
			    		<div class="accordion-inner">
			      			<table style="width: 99%">
								<tbody>
									<tr class="white-row">
										<td style="width: 98%; height:400px; border: 1px solid #dddddd; padding: 5px;">	
											<div>			
												<svg id="svg-mastery-map" width=100% height=400>
													<g/>
												</svg>
											</div>
										</td>
									</tr>
								</tbody>
							</table>
			    		</div>
			  		</div>
				</div>
			</div>
		</div>
	</div>

	<div class="topicconcept-spun-12">
		<div class="topicconcept-spun-grid-normaliser">
			<div class="accordion accordion-student-transcript-panel" id="accordion-map">
				<div class="accordion-group student-transcript-panel">
			  		<div class="accordion-heading">
			    		<div class="accordion-wordheading">
			      			<h4>Overall Progress</h4>
			    		</div>
			    		<div class="accordion-right">
			      			<a class="accordion-toggle btn accordion-minimise" data-toggle="collapse" data-parent="#accordion-map" href="#collapse-map"><i class="icon-minus"></i></a>
			    		</div>
			  		</div>
			  		<div id="collapse-map" class="accordion-body collapse in">
			    		<div class="accordion-inner">
			      			<table style="width: 99%">
								<tbody>
									<tr class="white-row">
										<td style="width: 98%; height:400px; border: 1px solid #dddddd; padding: 5px;">	
											<div>			
												<svg id="svg-progress-view" width=100% height=400>
													<g/>
												</svg>
											</div>
										</td>
									</tr>
								</tbody>
							</table>
			    		</div>
			  		</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	$(document).ready(function(){

	    //Create topic trees
	  	var tcdata = get_topicconcept_data();
    	generate_entire_dependency_map(tcdata.nodelist, 
                                   	   tcdata.edgelist);

    	var tcdata2 = get_topicconcept_history_data();
    	generate_entire_mastery_map(tcdata2.nodelist, 
                                    tcdata2.edgelist,
                                    tcdata2.submission,
                                    tcdata2.lastAtmNode,
                                    tcdata2.openAtmNodes,
                                    tcdata2.failedNodes,
                                    tcdata2.openAtmEdges,
                                    tcdata2.failedEdges);

    	$('.tooltip-units').tooltip();
    	generate_scoreboard_data(get_scoreboard_data());
    	var best= get_topicconcept_best_concepts();
    	Morris.Donut({
  			element: 'student-transcript-panel-best',
  			data: best,
  			formatter: function (y) { return '' }
 
		});

		var notbest= get_topicconcept_notbest_concepts();
    	Morris.Donut({
		  	element: 'student-transcript-panel-notbest',
		  	data: notbest,
  			formatter: function (y) { return '' }
		});
	});

	function generate_entire_dependency_map(nodelist, edgelist){
		//Create graph
	  	var gconcept = new dagreD3.Digraph();
	  	$.each(nodelist, function(){	  	
	  		gconcept.addNode(this.id, { label: this.name});
	  	});
	  	$.each(edgelist, function(){
	  		gconcept.addEdge(null, this.required_id, this.dependent_id, { label: "required by" });
	  	});
	  	var renderer = new dagreD3.Renderer();
    	setup_graph_identification(renderer);	 	  
	  	var layout_setting = dagreD3.layout();
	  	var layout = renderer.layout(layout_setting).run(gconcept, d3.select("svg#svg-progress-view g"));
	  
	  	var svg = d3.select("svg#svg-progress-view");
	  	var svgGroup = d3.select("svg#svg-progress-view g");
	  	zoom = d3.behavior.zoom().on("zoom", function redraw() {	  	
	  		svgGroup.attr("transform","translate(" + (d3.event.translate[0]) + "," + (d3.event.translate[1]) + ")" + " scale(" + d3.event.scale + ")");		
	  	});
	  	svg.call(zoom);	  
     
    	d3.selectAll("svg#svg-progress-view g.node")
    		.attr("title", get_topicconcept_statistics)
    		.each(function(d, i){
        		$(this).tipsy({gravity: "w", opacity: 1.0, html: true, fade: true});
    		});
	}

	function generate_entire_mastery_map(nodelist, 
                                         edgelist,
                                         submission, 
                                         lastAtmNode,
                                         openAtmNodes,
                                         failedNodes,
                                         openAtmEdges,
                                         failedEdges){
		//Create graph
	  	var gconcept = new dagreD3.Digraph();
    	setupNodes(gconcept, nodelist, lastAtmNode, openAtmNodes, failedNodes);
    	setupEdges(gconcept, edgelist, openAtmEdges, failedEdges);

	  	var renderer = new dagreD3.Renderer();
    	setup_graph_mastery_identification(renderer);	 	  
	  	var layout_setting = dagreD3.layout();
	  	var layout = renderer.layout(layout_setting).run(gconcept, d3.select("svg#svg-mastery-map g"));
	  
	  	var svg = d3.select("svg#svg-mastery-map");
	  	var svgGroup = d3.select("svg#svg-mastery-map g");
	  	zoom = d3.behavior.zoom().on("zoom", function redraw() {	  	
	  		svgGroup.attr("transform","translate(" + (d3.event.translate[0]) + "," + (d3.event.translate[1]) + ")" + " scale(" + d3.event.scale + ")");		
	  	});
	  	svg.call(zoom);	  
     	
    	d3.selectAll("svg#svg-mastery-map g.node")
    		.attr("title", get_topicconcept_current_statistics)
    		.each(function(d, i){
        		$(this).tipsy({gravity: "w", opacity: 1.0, html: true, fade: true});
    		});
    	

    	if (submission) {
	      	setup_node_edges_color_under_submission(nodelist);
	      	setup_current_node_edges_color(lastAtmNode);
	      	setup_passed_nodes_edges_color(openAtmNodes);
	      	setup_failed_nodes_edges_color(failedNodes);
	      	setup_passed_edges_color(openAtmEdges);
	      	setup_disabled_edges_color(edgelist);
	    }
	    else {
	      	setup_node_edges_color(nodelist);
	    }
	    setup_edgepaths_arrow_heads()
	}

	function setup_graph_identification(renderer) {
	    var oldDrawNodes = renderer.drawNodes();
	    renderer.drawNodes(function(graph, svg) {
	      	var svgNodes = oldDrawNodes(graph, svg);
	      	//Set id for adding and removing classes later
	      	svgNodes.attr("id", function(u) { return G_NODE_KEY+u ; });
	      	svgNodes.select().attr("class", function(u) { return G_NODE_KEY+u ; });

	      	return svgNodes;
	    });

	}

	function setup_graph_mastery_identification(renderer) {
	    setup_graph_identification(renderer);

	    var oldDrawLabels = renderer.drawEdgeLabels();
	    renderer.drawEdgeLabels(function(graph, svg) {
	      	var svgLabels = oldDrawLabels(graph, svg);
	      	//Set classes for identification purposes
	      	svgLabels.attr("class", function(u) { 
	        	var ids = u.split(" ");
	        	return "edgeLabel enter " + G_EDGELABEL_REQUIRED_KEY+ids[0] + " " + G_EDGELABEL_DEPENDENT_KEY+ids[1] ; 
	      	});

	      	return svgLabels;
	    });

	    var oldDrawPaths = renderer.drawEdgePaths();
	    renderer.drawEdgePaths(function(graph, svg) {
	      	var svgPaths = oldDrawPaths(graph, svg);
	      	//Set classes for identification purposes
	      	svgPaths.attr("class", function(u) { 
	        	var ids = u.split(" ");
	        	return "edgePath enter " + G_EDGEPATH_REQUIRED_KEY+ids[0] + " " + G_EDGEPATH_DEPENDENT_KEY+ids[1] ; 
	      	});

	      	return svgPaths;
	    });

	}

	function setupNodes(graph, nodelist, lastAtmNode, openAtmNodes, failedNodes) {
	    $.each(nodelist, function(){  
	      	graph.addNode(this.concept_id, { label: this.concept_name });
	    });
	    if (openAtmNodes != null ) {
	      	$.each(openAtmNodes, function(){  
	        	graph.addNode(this.id, { label: this.name });
	      	});
	    }
	    if (failedNodes != null) {
	      	$.each(failedNodes, function(){  
	        	graph.addNode(this.id, { label: this.name });
	      	});
	    }
	    if (lastAtmNode != null) {
	      	graph.addNode(lastAtmNode.id, { label: lastAtmNode.name });
	    }
	 }

  	function setupEdges(graph, edgelist, openAtmEdges, failedEdges) {
    	$.each(edgelist, function(){
      		graph.addEdge(String(this.required_id) + " " + String(this.dependent_id), this.required_id, this.dependent_id, { label: "required by" });
    	});
    	if (openAtmEdges != null) {
      		$.each(openAtmEdges, function(){
        		graph.addEdge(String(this.required_id) + " " + String(this.dependent_id), this.required_id, this.dependent_id, { label: "required by" });
      		});
		}
    	if (failedEdges != null) {
      		$.each(failedEdges, function(){
        		graph.addEdge(String(this.required_id) + " " + String(this.dependent_id), this.required_id, this.dependent_id, { label: "required by" });
      		});
    	}
  	}

  	function generate_scoreboard_data(profile_scores){
  		var table = document.getElementById("scoreboard_table").childNodes[1];
  		for (var i = 0; i < profile_scores.length; i++) {
  			var row = document.createElement("tr");

  			var sncol = document.createElement("td");
  			sncol.innerHTML = i+1;
  			row.appendChild(sncol);

  			var imgcol = document.createElement("td");
  			var profileimg = document.createElement("img");
  			profileimg.setAttribute("src", profile_scores[i].img);
  			profileimg.setAttribute("class", "user-profile-pic");
  			imgcol.appendChild(profileimg);
  			row.appendChild(imgcol);

  			var profilecol = document.createElement("td");
  			profilecol.innerHTML = profile_scores[i].name;
  			row.appendChild(profilecol);

  			var ratingcol = document.createElement("td");
  			ratingcol.innerHTML = profile_scores[i].rating;
  			row.appendChild(ratingcol);

  			table.appendChild(row);
  		}
  	}

	function get_topicconcept_data(){
		var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    async: false,
		    url: "<%= get_topicconcept_data_noedit_course_topicconcepts_path(@course)%>",
		    success: function(json) {	    	
		    	result = json; 
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
	  	});
	  	return result;
	}

	function get_topicconcept_history_data(){
		var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    data: {submission_id: <%= @chosen_submission.id %>},
		    async: false,
		    url: "<%= get_topicconcept_data_history_course_assessment_guidance_quizzes_path(@course)%>",
		    success: function(json) {	    	
		    	result = json;
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
	  	});
	  	return result;
	}


	function get_topicconcept_statistics(concept_id){

	    var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    data: {submission_id: <%= @chosen_submission.id %>},
		    async: false,
		    url: "<%= course_path(@course)%>" + "/topicconcepts/"+concept_id+"/get_topicconcept_single_statistics",
		    success: function(json) {
		    	result = json; 
		    	$("#"+G_NODE_KEY+concept_id+" rect").css("fill", result.fill);
		    	$("#"+G_NODE_KEY+concept_id+" rect").css("stroke", result.stroke);
		    	$("#"+G_NODE_KEY+concept_id+" text").css("fill", result.stroke);
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
		});

		return "<p class='name'>"+result.name+"</p>" + 
	           "<div><p class='subtop'> Statistics : <em class='sub'>"+result.raw_right+" / "+result.raw_total+" (" + result.raw_percent + ") "+"</em></p></div>";
    }

    function get_topicconcept_current_statistics(concept_id){

	    var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    data: {submission_id: <%= @chosen_submission.id %>},
		    async: false,
		    url: "<%= course_path(@course)%>" + "/topicconcepts/"+concept_id+"/get_topicconcept_single_current_statistics",
		    success: function(json) {
		    	result = json; 
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
		});

		return "<p class='name'>"+result.name+"</p>" + 
	           "<div><p class='subtop'> Statistics : <em class='sub'>"+result.raw_right+" / "+result.raw_total+" (" + result.raw_percent + ") "+"</em></p></div>";
    }

    function get_topicconcept_best_concepts(){
		var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    data: {submission_id: <%= @chosen_submission.id %>},
		    async: false,
		    url: "<%= get_topicconcept_best_concepts_course_topicconcepts_path(@course)%>",
		    success: function(json) {	    	
		    	result = json;
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
	  	});
	  	return result;
	}

	function get_topicconcept_notbest_concepts(){
		var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    data: {submission_id: <%= @chosen_submission.id %>},
		    async: false,
		    url: "<%= get_topicconcept_notbest_concepts_course_topicconcepts_path(@course)%>",
		    success: function(json) {	    	
		    	result = json;
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
	  	});
	  	return result;
	}

	function get_topicconcept_notbest_concepts(){
		var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    data: {submission_id: <%= @chosen_submission.id %>},
		    async: false,
		    url: "<%= get_topicconcept_notbest_concepts_course_topicconcepts_path(@course)%>",
		    success: function(json) {	    	
		    	result = json;
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
	  	});
	  	return result;
	}

	function get_scoreboard_data(){
		var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    async: false,
		    url: "<%= get_scoreboard_data_course_assessment_guidance_quizzes_path(@course)%>",
		    success: function(json) {	    	
		    	result = json;
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
	  	});
	  	return result;
	}

	function popupform(form){
    	if (!window.focus) {
    		return true;
    	}

    	window.open('', 'popup', 'height=610, width=610, scrollbars=yes');
    	form.target = 'popup';

    	return true;
    }
</script>