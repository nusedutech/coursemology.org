<%= render  partial: "tabs" %>

<div class="page-header">
    <h1>Overall Feedback</h1>
</div>

<div class="well">
    <div class="accordion" id="accordion-map">
   		<div class="accordion-group">
      		<div class="accordion-heading">
        		<div class="accordion-wordheading">
          			<h4>Overall Map Display</h4>
        		</div>
        		<div class="accordion-right">
	      			<a class="accordion-toggle btn accordion-minimise" data-toggle="collapse" data-parent="#accordion-map" href="#collapse-map"><i class="icon-minus"></i></a>
        		</div>
      		</div>
      		<div id="collapse-map" class="accordion-body collapse in">
        		<div class="accordion-inner">
          			<table style="width: 99%">
						<thead>
							<tr>
								<th></th>
							</tr>
						</thead>
						<tbody>
							<tr class="white-row">
								<td style="width: 98%; height:400px; border: 1px solid #dddddd; padding: 5px;">	
									<div>			
										<svg id="svg-concept" width=100% height=400>
											<g/>
										</svg>
									</div>
								</td>
							</tr>
						</tbody>
					</table>
        		</div>
      		</div>
    	</div>
  	</div>
</div>

<script>
	$(document).ready(function(){
				
	  	//Create topic trees
	  	var tcdata = get_topicconcept_data();
    	console.log(tcdata);
    	generate_entire_dependency_map(tcdata.nodelist, 
                                   tcdata.edgelist);

	  	var topictrees = [];
	  	jQuery.each(tcdata.topictrees, function() {		  
		  	topictrees.push({"id" : this.itc.id, "parent" : this.parent == null ? "#" : 	this.parent.id, "text" : this.itc.name,"type" : this.itc.typename});
		});
		
	  	$('#div_tree').jstree({
	  		"core" : {
		    	"animation" : 0,
		    	"check_callback" : true,
		    	"themes" : {"icons" : true, "dots" : true },
	    		'data' : topictrees		    
	    	},
	   		"types" : {
		    	"#" : {
			      	"max_children" : 20, 
			      	"max_depth" : 20, 
			      	"valid_children" : ["topic"]
			    },
			    "topic" : {
			      	"icon" : "greentree",
			      	"valid_children" : ["subtopic","concept"]
			    },
			    "subtopic" : {
			      	"icon" : "greenbranch",
			      	"valid_children" : ["subtopic","concept"]
			    },
			    "concept" : {
			      	"icon" : "greenleaf",
			      	"valid_children" : []
			    }
			},
	    	"plugins" : [ "contextmenu","types", "dnd", "crrm","search", "themes"],
	    	"contextmenu" : { "items" : function (node) {} }
	  	});
	  
	  	//select event handler
	  	$('#div_tree').on('select_node.jstree', function (e, data) {
	  		if(data.node.type == 'concept'){
			  	var svgGroup = d3.select("svg#svg-concept g");	 
			  	loc_x = parseInt($('#svg-concept').parent().width())/2 - parseInt(layout._nodes[data.node.id].value.x);
			  	loc_y = parseInt($('#svg-concept').parent().height())/2 - parseInt(layout._nodes[data.node.id].value.y);
			    
			  	zoom.scale(1);
	  	  		zoom.translate([loc_x, loc_y]);
	  			svgGroup.transition().duration(500).attr('transform', 'translate(' + zoom.translate() + ') scale(' + zoom.scale() + ')')
	  			selected_node = data.node;
	  		}
	  	});	  
	
	});

    function generate_entire_dependency_map(nodelist, edgelist){
		//Create graph
	  	var gconcept = new dagreD3.Digraph();
	  	$.each(nodelist, function(){	  	
	  		gconcept.addNode(this.id, { label: this.name});
	  	});
	  	$.each(edgelist, function(){
	  		gconcept.addEdge(null, this.required_id, this.dependent_id, { label: "required by" });
	  	});
	  	var renderer = new dagreD3.Renderer();	  
	  	var layout_setting = dagreD3.layout();
	  	layout = renderer.layout(layout_setting).run(gconcept, d3.select("svg#svg-concept g"));
	  
	  	var svg = d3.select("svg#svg-concept");
	  	var svgGroup = d3.select("svg#svg-concept g");
	  	zoom = d3.behavior.zoom().on("zoom", function redraw() {	  	
	  		svgGroup.attr("transform","translate(" + (d3.event.translate[0]) + "," + (d3.event.translate[1]) + ")" + " scale(" + d3.event.scale + ")");		
	  	});
	  	svg.call(zoom);	  

    	d3.selectAll("g.node").on('click', function(d, i){
      		$("#div_tree").jstree(true).deselect_node(selected_node, true);
		  	$("#div_tree").jstree(true).select_node($("#div_tree").jstree(true).get_node(d),false,false);
	  	})
     
    	d3.selectAll("g.node")
    		.attr("title", get_topic_statistics)
    		.each(function(d, i){
        		$(this).tipsy({gravity: "w", opacity: 1.0, html: true, fade: true});
    		});
	}

	function get_topicconcept_data(){
		var result;
		$.ajax({
	    type: "POST",
	    dataType: "json",
	    async: false,
	    url: "<%= get_topicconcept_data_noedit_course_topicconcepts_path(@course)%>",
	    success: function(json) {	    	
	    	result = json; 
	    },
	    error: function(XMLHttpRequest, textStatus, errorThrown) { 
        	alert("Status: " + textStatus + " Error: " + errorThrown); 
    	}
	  });
	  return result;
	}

	function get_topic_statistics(concept_id){

	    var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    async: false,
		    url: "<%= course_path(@course)%>" + "/topicconcepts/"+concept_id+"/get_topicconcept_statistics",
		    success: function(json) {
		    	result = json; 
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
		});

		return "<p class='name'>"+result.name+"</p>" + 
	           "<div><p class='subtop'> Raw : <em class='sub'>"+result.raw_right+" / "+result.raw_total+"</em></p></div>" + 
	           "<div><p class='subtop'> Latest : <em class='sub'>"+result.latest_right+" / "+result.latest_total+"</em></p></div>" + 
	           "<div><p class='subtop'> Optimistic : <em class='sub'>"+result.optimistic_right+" / "+result.optimistic_total+"</em></p></div>" + 
	           "<div><p class='subtop'> Pessimistic : <em class='sub'>"+result.pessimistic_right+" / "+result.pessimistic_total+"</em></p></div>";
    }
</script>