<%= render  partial: "tabs" %>

<div class="page-header">
    <h1>Overall Feedback</h1>
</div>

<div class="well">
	<div class="accordion" id="accordion-attempt-table">
   		<div class="accordion-group">
      		<div class="accordion-heading">
        		<div class="accordion-wordheading">
          			<h4>Attempt Summary</h4>
        		</div>
        		<div class="accordion-right">
	      			<a class="accordion-toggle btn accordion-minimise" data-toggle="collapse" data-parent="#accordion-attempt-table" href="#collapse-attempt-table"><i class="icon-minus"></i></a>
        		</div>
      		</div>
      		<div id="collapse-attempt-table" class="accordion-body collapse in">
        		<div class="accordion-inner">
          			<table class="table table-bordered">
					  	<tr>
						    <th width="15%">Status</th>
						    <th>Count</th>
						    <th>Students</th>
					  	</tr>
					  	<tr>
						    <td>Attempting</td>
						    <td><%= @summary[:attempting].size %></td>
						    <td>
						      <% @summary[:attempting].each do |std_course| %>
						          <%= render partial: "user_courses/short_name_display",
						                     locals: { user_course: std_course } %>
						      <% end %>
						    </td>
					  	</tr>
					  	<tr>
						    <td>Not attempted</td>
						    <td><%= @summary[:unsubmitted].size %></td>
						    <td>
						      <% @summary[:unsubmitted].each do |std_course| %>
						          <%= render partial: "user_courses/short_name_display",
						                     locals: { user_course: std_course } %>
						      <% end %>
						    </td>
					  	</tr>
					</table>
        		</div>
      		</div>
    	</div>
  	</div>

    <div class="accordion" id="accordion-map">
   		<div class="accordion-group">
      		<div class="accordion-heading">
        		<div class="accordion-wordheading">
          			<h4>Overall Map Display</h4>
        		</div>
        		<div class="accordion-right">
	      			<a class="accordion-toggle btn accordion-minimise" data-toggle="collapse" data-parent="#accordion-map" href="#collapse-map"><i class="icon-minus"></i></a>
        		</div>
      		</div>
      		<div id="collapse-map" class="accordion-body collapse in">
        		<div class="accordion-inner">
          			<table style="width: 99%">
						<thead>
							<tr>
								<th></th>
							</tr>
						</thead>
						<tbody>
							<tr class="white-row">
								<td style="width: 98%; height:400px; border: 1px solid #dddddd; padding: 5px;">	
									<div>			
										<svg id="svg-concept" width=100% height=400>
											<g/>
										</svg>
									</div>
								</td>
							</tr>
						</tbody>
					</table>
        		</div>
      		</div>
    	</div>
  	</div>

  	<div class="accordion" id="accordion-wrong-questions">
   		<div class="accordion-group">
      		<div class="accordion-heading">
        		<div class="accordion-wordheading">
          			<h4>Most frequently wrong questions</h4>
        		</div>
        		<div class="accordion-right">
	      			<a class="accordion-toggle btn accordion-minimise" data-toggle="collapse" data-parent="#accordion-wrong-questions" href="#collapse-wrong-questions"><i class="icon-minus"></i></a>
        		</div>
      		</div>
      		<div id="collapse-wrong-questions" class="accordion-body collapse in">
        		<div class="accordion-inner">
        			<form action="<%= request.original_url %>" method="GET">
	        			<table class="table-basic">
					      	<tr>
						        <td>Top Results: </td>
						        <td>
						          	<input name="freq_wrong_count" type="number" value="<%= @freq_wrong_count %>" min="0"/>
						        </td>
					        	<td><input class="btn" type="submit" value="Go" /></td>
					      	</tr>
					    </table>
					</form>

          			<% @summary[:freq_wrong_questions].each_with_index do |q, i| %>
          				<% qn = @course.questions.find_by_id(q.qid) %>
				        <section id="question_<%= i + 1%>" style="margin-bottom: 20px;">
				          	<div class="grey_background" style="margin: 10px;">
				            	<strong><%= i + 1 %>. </strong>
				            	<%= style_format qn.description %>
				            	
				            	- Answered wrongly <strong style="color: #FF0000;"><%= q.count %></strong> times
				          	</div>
					        <% if qn.specific.class == Assessment::McqQuestion %>
					          	<table class="table" style="margin: 10px; margin-left: 50px; width: auto; min-width: 90%">
						            <colgroup>
					                	<col width="5%"/>
						              	<col width="35%"/>
						              	<col width="50%"/>
						            </colgroup>
						            <% qn.options.each do |opt| %>
				            			<% nonuniq_stds = opt.assemt_std(@course, @guidance_quiz.assessment) %>
							            <tr>
								            <td><input type="checkbox" disabled <%= "checked" if opt.correct %> /></td>
								            <td><%= opt.text %></td>
								            <td><%= nonuniq_stds.size %></td>
							            </tr>
				        			<% end %>
					          	</table>
					        <% end %>
				      	</section>
				    <% end %>
        		</div>
      		</div>
    	</div>
  	</div>

  	<div class="accordion" id="accordion-student-attempted">
   		<div class="accordion-group">
      		<div class="accordion-heading">
        		<div class="accordion-wordheading">
          			<h4>Attempt Area</h4>
        		</div>
        		<div class="accordion-right">
	      			<a class="accordion-toggle btn accordion-minimise" data-toggle="collapse" data-parent="#accordion-student-attempted" href="#collapse-student-attempted"><i class="icon-minus"></i></a>
        		</div>
      		</div>
      		<div id="collapse-student-attempted" class="accordion-body collapse in">
        		<div class="accordion-inner">
        			<div id="student-attempted-pie" style="text-align: center;"></div>
        		</div>
      		</div>
    	</div>
  	</div>

  	<div class="accordion" id="accordion-overall-trend">
   		<div class="accordion-group">
      		<div class="accordion-heading">
        		<div class="accordion-wordheading">
          			<h4>Overall Trends</h4>
        		</div>
        		<div class="accordion-right">
	      			<a class="accordion-toggle btn accordion-minimise" data-toggle="collapse" data-parent="#accordion-overall-trend" href="#collapse-overall-trend"><i class="icon-minus"></i></a>
        		</div>
      		</div>
      		<div id="collapse-overall-trend" class="accordion-body collapse in">
        		<div class="accordion-inner">
        			<div>
        				<h4>Accumulative</h4>
        				<form class="form-inline" action="<%= get_topicconcept_area_course_topicconcepts_path(@course) %>" onsubmit="popupform(this);" method="POST">
	        				<div style="display:inline-block;">
	        					From: <input type="date" name="start_period" class="" value="<%= Date.today - 1.months %>"/>&nbsp;&nbsp;&nbsp; 
	        				</div>
	        				<div style="display:inline-block;">
	        					To: <input type="date" name="end_period" value="<%= Date.today %>"/>&nbsp;&nbsp;&nbsp;
	        				</div>
	        				<div style="display:inline-block;">
	        					Step:
		        				<select class="input-small" name="time_step">
		        					<option value="day">Day</option>
		        					<option value="month">Month</option>
		        					<option value="year">Year</option>
		        				</select>
	        				</div>
        					&nbsp;&nbsp;&nbsp;
	        				<div style="display:inline-block;">
	        					Correct?:
	        					<input type="checkbox" name="correct" value="true" checked/>
	        				</div>
        					&nbsp;&nbsp;&nbsp;<input class="btn" type="submit" value="Submit" />
        					<input type="hidden" name="accumulative" value="true" />
	        			</form>
        				<div id="overall-trend-acc" style="height: 400px; margin-top: 10px; margin-bottom: 10px;"></div>
        			</div>
        			<hr/>
        			<div>
        				<h4>Non-accumulative</h4>
        				<form class="form-inline" action="<%= get_topicconcept_area_course_topicconcepts_path(@course) %>" onsubmit="popupform(this);" method="POST">
	        				<div style="display:inline-block;">
	        					From: <input type="date" name="start_period" class="" value="<%= Date.today - 1.months %>"/>&nbsp;&nbsp;&nbsp; 
	        				</div>
	        				<div style="display:inline-block;">
	        					To: <input type="date" name="end_period" value="<%= Date.today %>"/>&nbsp;&nbsp;&nbsp;
	        				</div>
	        				<div style="display:inline-block;">
	        					Step:
		        				<select class="input-small" name="time_step">
		        					<option value="day">Day</option>
		        					<option value="month">Month</option>
		        					<option value="year">Year</option>
		        				</select>
	        				</div>
        					&nbsp;&nbsp;&nbsp;
	        				<div style="display:inline-block;">
	        					Correct?:
	        					<input type="checkbox" name="correct" value="true" checked/>
	        				</div>
        					&nbsp;&nbsp;&nbsp;<input class="btn" type="submit" value="Submit" />
        					<input type="hidden" name="accumulative" value="false" />
	        			</form>
        				<div id="overall-trend-nonacc" style="height: 400px; margin-top: 10px; margin-bottom: 10px;"></div>
        			</div>
        		</div>
      		</div>
    	</div>
  	</div>

</div>

<script>
  	var G_NODE_KEY = "g-node-key-"
  	var stud_attempt_pie;

	$(document).ready(function(){
				
	  	//Create topic trees
	  	var tcdata = get_topicconcept_data();
    	console.log(tcdata);
    	generate_entire_dependency_map(tcdata.nodelist, 
                                   tcdata.edgelist);

	  	var topictrees = [];
	  	jQuery.each(tcdata.topictrees, function() {		  
		  	topictrees.push({"id" : this.itc.id, "parent" : this.parent == null ? "#" : 	this.parent.id, "text" : this.itc.name,"type" : this.itc.typename});
		});
		
	  	$('#div_tree').jstree({
	  		"core" : {
		    	"animation" : 0,
		    	"check_callback" : true,
		    	"themes" : {"icons" : true, "dots" : true },
	    		'data' : topictrees		    
	    	},
	   		"types" : {
		    	"#" : {
			      	"max_children" : 20, 
			      	"max_depth" : 20, 
			      	"valid_children" : ["topic"]
			    },
			    "topic" : {
			      	"icon" : "greentree",
			      	"valid_children" : ["subtopic","concept"]
			    },
			    "subtopic" : {
			      	"icon" : "greenbranch",
			      	"valid_children" : ["subtopic","concept"]
			    },
			    "concept" : {
			      	"icon" : "greenleaf",
			      	"valid_children" : []
			    }
			},
	    	"plugins" : [ "contextmenu","types", "dnd", "crrm","search", "themes"],
	    	"contextmenu" : { "items" : function (node) {} }
	  	});
	  
	  	//select event handler
	  	$('#div_tree').on('select_node.jstree', function (e, data) {
	  		if(data.node.type == 'concept'){
			  	var svgGroup = d3.select("svg#svg-concept g");	 
			  	loc_x = parseInt($('#svg-concept').parent().width())/2 - parseInt(layout._nodes[data.node.id].value.x);
			  	loc_y = parseInt($('#svg-concept').parent().height())/2 - parseInt(layout._nodes[data.node.id].value.y);
			    
			  	zoom.scale(1);
	  	  		zoom.translate([loc_x, loc_y]);
	  			svgGroup.transition().duration(500).attr('transform', 'translate(' + zoom.translate() + ') scale(' + zoom.scale() + ')')
	  			selected_node = data.node;
	  		}
	  	});	  
	

		generate_student_attempt_pie();
		generate_overall_trend_data();
	});

    function generate_entire_dependency_map(nodelist, edgelist){
		//Create graph
	  	var gconcept = new dagreD3.Digraph();
	  	$.each(nodelist, function(){	  	
	  		gconcept.addNode(this.id, { label: this.name});
	  	});
	  	$.each(edgelist, function(){
	  		gconcept.addEdge(null, this.required_id, this.dependent_id, { label: "required by" });
	  	});
	  	var renderer = new dagreD3.Renderer();
    	setup_graph_identification(renderer);	 	  
	  	var layout_setting = dagreD3.layout();
	  	layout = renderer.layout(layout_setting).run(gconcept, d3.select("svg#svg-concept g"));
	  
	  	var svg = d3.select("svg#svg-concept");
	  	var svgGroup = d3.select("svg#svg-concept g");
	  	zoom = d3.behavior.zoom().on("zoom", function redraw() {	  	
	  		svgGroup.attr("transform","translate(" + (d3.event.translate[0]) + "," + (d3.event.translate[1]) + ")" + " scale(" + d3.event.scale + ")");		
	  	});
	  	svg.call(zoom);	  

    	d3.selectAll("g.node").on('click', function(d, i){
      		$("#div_tree").jstree(true).deselect_node(selected_node, true);
		  	$("#div_tree").jstree(true).select_node($("#div_tree").jstree(true).get_node(d),false,false);
	  	})
     
    	d3.selectAll("g.node")
    		.attr("title", get_topicconcept_statistics)
    		.each(function(d, i){
        		$(this).tipsy({gravity: "w", opacity: 1.0, html: true, fade: true});
    		});
	}

	function generate_student_attempt_pie(){
		var weights = get_topicconcept_weights();
		set_student_attempt_pie_json_areas(weights.concepts);
		stud_attempt_pie = new d3pie("student-attempted-pie", student_attempt_pie_json);
	}

	function generate_overall_trend_data(){

		var accumulative = get_topicconcept_accumulative();
		Morris.Area({
		    element: 'overall-trend-acc',
            gridEnabled: true,
		    data: accumulative.data,
		    xkey: accumulative.x,
		    ykeys: accumulative.y,
		    labels: accumulative.concepts,
            resize: true,
		    pointSize: 3,
		    hideHover: 'auto'
		});

		var nonaccumulative = get_topicconcept_nonaccumulative();
		Morris.Area({
		    element: 'overall-trend-nonacc',
            gridEnabled: true,
		    data: nonaccumulative.data,
		    xkey: nonaccumulative.x,
		    ykeys: nonaccumulative.y,
		    labels: nonaccumulative.concepts,
            resize: true,
		    pointSize: 3,
		    hideHover: 'auto'
		});
	}

	function setup_graph_identification(renderer) {
	    var oldDrawNodes = renderer.drawNodes();
	    renderer.drawNodes(function(graph, svg) {
	      var svgNodes = oldDrawNodes(graph, svg);
	      //Set id for adding and removing classes later
	      svgNodes.attr("id", function(u) { return G_NODE_KEY+u ; });
	      svgNodes.select().attr("class", function(u) { return G_NODE_KEY+u ; });

	      return svgNodes;
	    });

	 }

	function get_topicconcept_data(){
		var result;
		$.ajax({
	    type: "POST",
	    dataType: "json",
	    async: false,
	    url: "<%= get_topicconcept_data_noedit_course_topicconcepts_path(@course)%>",
	    success: function(json) {	    	
	    	result = json; 
	    },
	    error: function(XMLHttpRequest, textStatus, errorThrown) { 
        	alert("Status: " + textStatus + " Error: " + errorThrown); 
    	}
	  });
	  return result;
	}

	function get_topicconcept_statistics(concept_id){

	    var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    async: false,
		    url: "<%= course_path(@course)%>" + "/topicconcepts/"+concept_id+"/get_topicconcept_overall_statistics",
		    success: function(json) {
		    	result = json; 
		    	$("#"+G_NODE_KEY+concept_id+" rect").css("fill", result.fill);
		    	$("#"+G_NODE_KEY+concept_id+" rect").css("stroke", result.stroke);
		    	$("#"+G_NODE_KEY+concept_id+" text").css("fill", result.stroke);
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
		});

		return "<p class='name'>"+result.name+"</p>" + 
	           "<div><p class='subtop'> Statistics : <em class='sub'>"+result.raw_right+" / "+result.raw_total+" (" + result.raw_percent + ") "+"</em></p></div>";
    }

    function get_topicconcept_weights(){

	    var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    async: false,
		    url: "<%= get_topicconcept_weights_course_topicconcepts_path(@course)%>",
		    success: function(json) {
		    	result = json; 
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
		});

		return result;
    }

    function get_topicconcept_accumulative(){

	    var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    data: { accumulative: true , correct: true},
		    async: false,
		    url: "<%= get_topicconcept_area_course_topicconcepts_path(@course)%>",
		    success: function(json) {
		    	result = json; 
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
		});

		return result;
    }

    function get_topicconcept_nonaccumulative(){

	    var result;
		$.ajax({
		    type: "POST",
		    dataType: "json",
		    data: { accumulative: false , correct: true},
		    async: false,
		    url: "<%= get_topicconcept_area_course_topicconcepts_path(@course)%>",
		    success: function(json) {
		    	result = json; 
		    },
		    error: function(XMLHttpRequest, textStatus, errorThrown) { 
	        	alert("Status: " + textStatus + " Error: " + errorThrown); 
	    	}
		});

		return result;
    }

    function popupform(form){
    	if (!window.focus) {
    		return true;
    	}

    	window.open('', 'popup', 'height=510, width=810, scrollbars=yes');
    	form.target = 'popup';

    	return true;
    }
</script>